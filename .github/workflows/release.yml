# CSQL - A command-line tool for CSV querying
# Copyright (C) 2025  Jack Bister
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set VERSIONNAME
        run: VERSIONNAME_DOTS=${GITHUB_REF##*/} && echo "VERSIONNAME_DOTS=$VERSIONNAME_DOTS" >> $GITHUB_ENV && VERSIONNAME=$(echo $VERSIONNAME_DOTS | sed 's/\./_/g') && echo "VERSIONNAME=$VERSIONNAME" >> $GITHUB_ENV

      - name: Setup
        uses: actions/setup-go@v4
        with:
          go-version: ^1.24
        id: go

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and zip Linux amd64
        id: build_linux_x64
        run: LINUX_X64_ASSET_PATH="csql-$VERSIONNAME-amd64-linux.zip" && go build -o 'csql' -v -ldflags "-X main.versionString=$VERSIONNAME_DOTS" && zip $LINUX_X64_ASSET_PATH csql && echo "::set-output name=asset_path::$LINUX_X64_ASSET_PATH"

      - name: Build and zip macOS arm64
        id: build_macos_arm64
        run: MACOS_ARM64_ASSET_PATH="csql-$VERSIONNAME-arm64-macos.zip" && GOOS=darwin GOARCH=arm64 go build -o 'csql' -v -ldflags "-X main.versionString=$VERSIONNAME_DOTS" && zip $MACOS_ARM64_ASSET_PATH csql && echo "::set-output name=asset_path::$MACOS_ARM64_ASSET_PATH"

      - name: Build and zip Windows x64
        id: build_windows_x64
        run: WINDOWS_X64_ASSET_PATH="csql-$VERSIONNAME-amd64-windows.zip" && GOOS=windows GOARCH=amd64 go build -o 'csql.exe' -v -ldflags "-X main.versionString=$VERSIONNAME_DOTS" && zip $WINDOWS_X64_ASSET_PATH csql.exe && echo "::set-output name=asset_path::$WINDOWS_X64_ASSET_PATH"

      - name: Test
        run: go test -v ./...

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Linux x64
        id: upload_linux_x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.build_linux_x64.outputs.asset_path}}
          asset_name: ${{steps.build_linux_x64.outputs.asset_path}}
          asset_content_type: application/zip

      - name: Upload macOS arm64
        id: upload_macos_arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.build_macos_arm64.outputs.asset_path}}
          asset_name: ${{steps.build_macos_arm64.outputs.asset_path}}
          asset_content_type: application/zip

      - name: Upload Windows x64
        id: upload_windows_x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.build_windows_x64.outputs.asset_path}}
          asset_name: ${{steps.build_windows_x64.outputs.asset_path}}
          asset_content_type: application/zip
